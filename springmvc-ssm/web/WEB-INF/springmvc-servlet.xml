<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- ************************ springmvc 相关配置 ************************ -->

    <!-- 扫 Controller -->
    <context:component-scan base-package="com.seamew"/>

    <!-- 让 springmvc 不处理静态资源，负责静态资源也会走我们的前端控制器、视图解析器 -->
    <mvc:default-servlet-handler/>

    <!-- 让 springmvc 自带的注解生效 -->
    <!-- 使用 conversionService 来转换请求中的数据，使用 localValidator 来校验数据 -->
    <mvc:annotation-driven conversion-service="conversionService" validator="localValidator">
        <!-- spring 提供的消息转换器，可以自动将 controller 返回的对象序列化为 JSON 字符串返回给前端 -->
        <mvc:message-converters>

            <!-- 使用 jackson 序列化 -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <!-- 自定义Jackson的objectMapper -->
                <property name="objectMapper" ref="customObjectMapper" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>

        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 访问静态资源的请求直接映射到文件路径 -->
    <mvc:resources mapping="/js/**" location="/static/js/"/>
    <mvc:resources mapping="/css/**" location="/static/css/"/>
    <mvc:resources mapping="/image/**" location="/static/image/"/>

    <!-- ************************ springmvc 相关 bean ************************ -->

    <!-- 处理映射器 -->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
    <!-- 处理器适配器 -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
    <!-- 视图解析器 -->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"/>
        <!-- order -->
        <property name="order" value="10"/>
    </bean>

    <!-- ************************ thymeleaf 视图解析器 ************************ -->

    <!-- thymeleaf 的视图解析器-->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="true"/>
        <!-- 配置字符集 -->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- thymeleaf 的模板引擎配置-->
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="enableSpringELCompiler" value="true" />
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <!-- order 配置为 1 解析视图时可以被优先使用 -->
        <property name="order" value="1"/>
        <!-- 配置字符集 -->
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine" ref="templateEngine"/>
    </bean>

    <!-- ************************ 消息转化相关 bean ************************ -->

    <bean id="customObjectMapper" class="com.seamew.config.CustomObjectMapper"/>

    <bean id="conversionService" class="org.springframework.core.convert.support.DefaultConversionService"/>

    <!-- ************************ 数据校验相关 bean ************************ -->

    <bean id="localValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

</beans>